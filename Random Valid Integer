This question was asked by Google.

Given an integer n and a list of integers l, write a function that randomly generates a number from 0 to n-1 that isnt in l (uniform).


// We can solve this by generating a valid list of numbers from 0 to n - 1 and generating a random index and then indexing into the valid list at that index.
// To avoid iterating over the entire list when we check if the list has an integer we can put the list into a set which will let us .has() to check the set with constant time on each iteration vs checking the list in linear time on each iteration.




function getRandomValidInteger(list, n) {
  let set = new Set(list);
  let validIntegers = [];

  for (let i = 0; i <= n - 1; i++) {
    if (!set.has(i)) {
      validIntegers.push(i);
    }
  }

  let randomIndex = Math.floor(Math.random() * validIntegers.length);
  return validIntegers[randomIndex];
}

console.log(getRandomValidInteger([1, 3], 5));
