You have n fair coins and you flip them all at the same time. Any that come up tails you set aside. The ones that come up heads you flip again. How many rounds do you expect to play before only one coin remains?

Write a function that, given n, returns the number of rounds you'd expect to play until one coin remains.

// We can solve this recursively. 
// One coin has a 50% chance of being heads or tails, so if we have n coins we can divide by 2 because half of them are probably going to land on heads.
// We need to count the number of rounds so we add 1 for every flip.



function fairCoinFlips(n) {
  if (n <= 1) {
    return 0;
  }
  return 1 + fairCoinFlips(n / 2);
}

console.log(fairCoinFlips(8));
